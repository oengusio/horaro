user horaro horaro;
worker_processes auto; # it will be determinate automatically by the number of core

# error_log  /var/log/nginx/error.log warn;
error_log  /dev/stderr warn;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    sendfile on;
#     access_log /var/log/nginx/access.log;
    access_log /dev/stdout;
    keepalive_timeout 3000;

    server {
      listen [::]:80 default_server;
      listen 80 default_server;

      server_name _;

      root /var/www/horaro/public;
      index index.php;

      # restrict file upload size
      client_max_body_size 4M;

      # improve gzip config
      gzip             on;
      gzip_min_length  1100;
      gzip_buffers     4 32k;
      gzip_types       text/plain application/x-javascript text/xml text/css text/csv text/calendar application/javascript application/json;
      gzip_vary        on;

      location / {
        # make sure dumb clients get a proper favicon
        rewrite ^/favicon.ico /assets/images/favicons/favicon.ico;

        # First attempt to serve request as file, then
        # as directory, then fall back to using the index.php.
        try_files $uri $uri/ @index;
      }

      location @index {
        rewrite ^/(.*) /index.php/$1;
      }

      # send longer caching header for production assets
      location ~* "\.[0-9a-f]{8}\.(css|js|png|ico)$" {
        expires 6M;
      }

      # send php scripts to fpm
      location ~ ^(.+?\.php)(/.*)?$ {
        # regex to split $uri to $fastcgi_script_name and $fastcgi_path
        fastcgi_split_path_info ^(.+\.php)(/.+)$;

        # Check that the PHP script exists before passing it
        try_files $fastcgi_script_name =404;

        # Bypass the fact that try_files resets $fastcgi_path_info
        # see: http://trac.nginx.org/nginx/ticket/321
        set $path_info $fastcgi_path_info;
        fastcgi_param PATH_INFO $path_info;

        fastcgi_index index.php;
        fastcgi_pass unix:/var/run/php84-fpm.sock;

        include fastcgi.conf;
      }

      # deny access to .htaccess files
      location ~ /\.ht {
        deny all;
      }
    }
}
